///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Test_Case.Recordings.CaseHash1
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RegistrationPageElementExist recording.
    /// </summary>
    [TestModule("13f7535d-3cab-4828-9e81-a21b4c3f61b3", ModuleType.Recording, 1)]
    public partial class RegistrationPageElementExist : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Test_Case.Test_CaseRepository repository.
        /// </summary>
        public static global::Test_Case.Test_CaseRepository repo = global::Test_Case.Test_CaseRepository.Instance;

        static RegistrationPageElementExist instance = new RegistrationPageElementExist();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RegistrationPageElementExist()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RegistrationPageElementExist Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TestCaseStudy.HeaderUyeOl' at 9;6.", repo.TestCaseStudy.HeaderUyeOlInfo, new RecordItemIndex(0));
            repo.TestCaseStudy.HeaderUyeOl.Click("9;6");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.HeaderContainerBoyner'.", repo.TestCaseStudy.HeaderContainerBoynerInfo, new RecordItemIndex(1));
            Validate.Exists(repo.TestCaseStudy.HeaderContainerBoynerInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.BtnSignIn'.", repo.TestCaseStudy.BtnSignInInfo, new RecordItemIndex(2));
            Validate.Exists(repo.TestCaseStudy.BtnSignInInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.BtnRegister'.", repo.TestCaseStudy.BtnRegisterInfo, new RecordItemIndex(3));
            Validate.Exists(repo.TestCaseStudy.BtnRegisterInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.FieldName'.", repo.TestCaseStudy.FieldNameInfo, new RecordItemIndex(4));
            Validate.Exists(repo.TestCaseStudy.FieldNameInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.FieldSurname'.", repo.TestCaseStudy.FieldSurnameInfo, new RecordItemIndex(5));
            Validate.Exists(repo.TestCaseStudy.FieldSurnameInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.FieldEmail'.", repo.TestCaseStudy.FieldEmailInfo, new RecordItemIndex(6));
            Validate.Exists(repo.TestCaseStudy.FieldEmailInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.FieldPassword'.", repo.TestCaseStudy.FieldPasswordInfo, new RecordItemIndex(7));
            Validate.Exists(repo.TestCaseStudy.FieldPasswordInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.FieldPasswordConfirmed'.", repo.TestCaseStudy.FieldPasswordConfirmedInfo, new RecordItemIndex(8));
            Validate.Exists(repo.TestCaseStudy.FieldPasswordConfirmedInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.FieldPhone'.", repo.TestCaseStudy.FieldPhoneInfo, new RecordItemIndex(9));
            Validate.Exists(repo.TestCaseStudy.FieldPhoneInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.SelectGender'.", repo.TestCaseStudy.RegisterForm.SelectGenderInfo, new RecordItemIndex(10));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.SelectGenderInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.SelectDay'.", repo.TestCaseStudy.RegisterForm.SelectDayInfo, new RecordItemIndex(11));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.SelectDayInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.SelectMonth'.", repo.TestCaseStudy.RegisterForm.SelectMonthInfo, new RecordItemIndex(12));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.SelectMonthInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.SelectYear'.", repo.TestCaseStudy.RegisterForm.SelectYearInfo, new RecordItemIndex(13));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.SelectYearInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.TextClarification'.", repo.TestCaseStudy.RegisterForm.TextClarificationInfo, new RecordItemIndex(14));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.TextClarificationInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.ChkBoxConfirmation'.", repo.TestCaseStudy.RegisterForm.ChkBoxConfirmationInfo, new RecordItemIndex(15));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.ChkBoxConfirmationInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.ChkBoxPermit'.", repo.TestCaseStudy.RegisterForm.ChkBoxPermitInfo, new RecordItemIndex(16));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.ChkBoxPermitInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Bu sayfa reCAPTCHA tarafından korunmaktadır ve Google ve'na tabidir.') on item 'TestCaseStudy.RegisterForm.TextReCaptcha'.", repo.TestCaseStudy.RegisterForm.TextReCaptchaInfo, new RecordItemIndex(17));
            Validate.AttributeEqual(repo.TestCaseStudy.RegisterForm.TextReCaptchaInfo, "InnerText", "Bu sayfa reCAPTCHA tarafından korunmaktadır ve Google ve'na tabidir.");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.RegisterForm.BtnSubmit'.", repo.TestCaseStudy.RegisterForm.BtnSubmitInfo, new RecordItemIndex(18));
            Validate.Exists(repo.TestCaseStudy.RegisterForm.BtnSubmitInfo);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'TestCaseStudy.BtnFeedback'.", repo.TestCaseStudy.BtnFeedbackInfo, new RecordItemIndex(19));
            Validate.Exists(repo.TestCaseStudy.BtnFeedbackInfo);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
